/*
 Localizable.strings
 Oovium
 
 Created by Joe Charlier on 1/21/12.
 Copyright (c) 2012 Aepryus Software. All rights reserved.
 */

/* name of the Oovium workspace "エーテル" iB:"アイテール" */
"aether" = "アイテル";

/* remove all bubbles from the current aether */
"clear" = "クリア";

"buy" = "購入する";

/* internet URLs */
"links" = "リンク";

"help" = "ヘルプ";

"album" = "アルバム";

/* the Dropbox cloud service */
"dropbox" = "dropbox";

/* the iPad / iPhone or iPod touch */
"device" = "デバイス";

/* log out of dropbox */
"logoff" = "ログオフ";

/* link to oovium.com */
"oovium" = "ウービウム";

/* online messageboard */
"forums" = "フォーラム";

/* link to Oovium's twitter feed */
"twitter" = "ツイッター";

/* rate or review the app in the AppStore. "評価" */
"review" = "レビュー";

/* bring up the about info (i.e., version and copyright) */
"about" = "出典";

/* list of changes in the current version "新着情報" */
"whatsnew" = "新情報";

/* Oovium term describing a subset of gestures "アンカー設定" */
"anchoring" = "アンカー機能";

"tutorial" = "チュートリアル";

/* tutorial explaining Oovium basics */
"basics" = "基本";

/* tutorial explaining how to make Mind Maps "マッパー" iB:"マインドマップ" */
"mapper" = "マッパー";

"cancel" = "キャンセル";

/* "新しい" iB: "新機能" */
"new" = "新";

"add" = "追加";

"remove" = "除去";

/* include other aethers in the current aether, similar to import */
"includes" = "含む";

"replace" = "置換";

"label" = "ラベル";

"copy" = "コピー";

/* menu option that allows the user to change the color of a bubble */
"color" = "色";

/* menu option that allows the user to change the shape of a bubble "図形" */
"shape" = "形";

"delete" = "削除";

/* "パラメータの追加" */
"addParam" = "パラメータを追加";

/* "パラメータの削除" */
"removeParam" = "パラメータを除去";

/* set of functions that work on aggregate data (sum,count,average) */
"aggregate" = "総計";

/* text justification (center, right, left) "両端揃え". -- In a hurry dropped する (均等割付する), put it back at some point - jjc 7/5/2012  */
"justify" = "均等割付";

"sum" = "合計";

"average" = "平均";

/* a type of aggregate function which tallies a running total of a given column */
"running" = "累積";

"none" = "なし";

"left" = "左";
"center" = "中央";
"right" = "右";

/* a list of nodes that flow into the current node */
"inputs" = "入力";

/* a list of nodes that flow out of the current node */
"outputs" = "出力";

"OK" = "OK";
"Yes" = "はい";
"No" = "いいえ";

/* "完全にこのエーテルがクリアをしますか？" */
"clearConfirm" = "このアイテルを完全にクリアにしますか？";
/* "選択されたバブルを削除しますか？" */
"deleteOneConfirm" = "選択したバブルを削除しますか？";
/* "選択されたバブルを削除しますか？" */
"deleteManyConfirm" = "選択した複数のバブルを削除しますか？";
"deleteColumn" = "選択したコラムを削除しますか？";
"deleteRow" = "選択した行を削除しますか？";

"whatsnewText" = "1.1.4の更新事項";

"ooviumText" = "ウービウムへようこそ\n\nもし、過去の計算機器類を全く知らない誰かが、現在我々に可能な限りの技術とコンセプトを駆使する計算用アプリを、１から設計したらどうなるでしょう？そのアプリは、どんな様相になるでしょうか？\n\nAepryusは長年にわたり、アプリケーションに関する多くのアイディアを生み出してきました。結局気づいたことは、それらアイディア中の６つは、同一プログラムの６つの異なる側面に過ぎなかったということです。ウービウムが、そのプログラムです。\n\nあるいはむしろ、ウービウムがそのプログラムになる、と言うべきでしょうか。ウービウムは、６つの側面のうち１つを包含しており、それはコードネームBricklinです。この側面は、オブジェクト指向の表計算ソフトの実行です。将来的には、Crawford, Shazaam, Archimedes, Eddington そしてMithrandirといった、他の５つの側面も、ウービウムに編入されます。";

"ooviumMmText" = "ウービウム　マインドマッパー\n\nホワイトボードに代替すべく設計されました：フィールド（アイテル）上へのノードの配置と、それら間のリンク指定ができます。各ノードは、複数の入力と出力を有することができます。（誘導グラフ）\n\nアイテル上での迅速かつ容易なバブル操作を可能にする、自然で優雅な一連のジェスチャー作成に、特に配慮しました。\n\nこれらのジェスチャーを習得するために、アンカー機能に関して勉強するようにしてください。\n";

"anchoringText" = "アンカーする喜び

ウービウムのワークスペースは、任意の大きな２次元空間であり、バブルをその上に配置できます。この空間は、アイテルと称されます。アイテルにバブルが追加されると、全てのバブルが収まるように、自動的にサイズ変更が為されます。ウービウムの使用に於いては、アンカーとして知られる、重要な種類のジェスチャーがあります。

アンカーとは、他の指で異なった作業を遂行する間、１本の指でアイテルを固定しておくことです。これらのジェスチャーとは：

バブルの移動 [アンカー+バブルをドラッグ]
１本の指でアンカーし、それから他の指でバブルをドラッグします。使う指の本数に応じた数のバブルを、自由にドラッグできます。

コンテキストメニュー [アンカー+バブルをタップ]
１本の指でアンカーし、他の指でバブルをタップします。これは、ラベルや削除といった、バブルに対する追加の操作ができるコンテキストメニューを表示します。

ラッソー [アンカー+ アイテルをドラッグ]
１本の指でアンカーし、他の指を空きスペースでドラッグします。２番目の指が辿る道筋に沿って、黄色い道程が出来始めるでしょう。複数のバブルを選択して、それらをグループとして移動したり、それら全部に対して、適宜コンテキストメニューの操作を実施できます。

カーソルを移動 [アンカー+ 式をタップ]
式の編集中、１本の指でアンカーし、他の指で式をタップします。カーソルがタップした位置に移動し、その位置で式が変更できます。";

"basics01" = "ここを\nダブル\nタップ";
"basics02" = "「アイテル」は、あなたのワークスペースです。あなたはたった今、そのアイテル上にインスタンスバブルを作成しました。";
"basics03" = "キーパッドを使用して、5781 =と入力してください";
"basics04" = "ここを\nダブル\nタップ";
"basics05" = "バブルの中に、数式を全部入れられます。";
"basics06" = "84\U00D7114=と入力してください";
"basics07" = "ここを\nダブル\nタップ";
"basics08" = "新しいバブルから、今迄のバブルが参照できます。";
"basics09" = "最初のバブルを触ってください";
"basics10" = "\U00D7キーを押してください";
"basics11" = "今度は、２番目のバブルに触ってください";
"basics12" = "等記号を押してください";
"basics13" = "バブルは、再検討して編集できます。";
"basics14" = "5781バブルを押してください";
"basics15" = "バックスペースキーを使って、数字を5783に変更し、 =を押してください";
"basics16" = "コンテキストメニューにアクセスしたいですか？バブルやバブルの集合体を移動したいですか？アンカーに関して読んでみましょう！（ヘルプの中にあります）";
"basics17" = "メニューキー（左下隅の赤い点）を押してください";
"basics18" = "アイテルキーを押してください";
"basics19" = "クリアキーを押してください";
"basics20" = "アイテルをクリアにするには「はい」を押してください";

"mapper01" = "右上隅のボックス（ツールバー）をタップして、オレンジ色の卵形を選びます。";
"mapper02" = "ここを\nダブル\nタップ";
"mapper03" = "「アイテル」は、あなたのワークスペースです。あなたはたった今、アイテル上にノードを作成しました。";
"mapper04" = "「ハム」とタイプして、リターンキーを押してください。";
"mapper05" = "右上のツールバーが、アイテルをダブルタップした際に何が作成されるかを決定します。色ツール（一番左）をタップして、若苗色を選択してください。";
"mapper06" = "ここを\nダブル\nタップ";
"mapper07" = "２番目のノードに「ジューシー」とタイプして、リターンキーを押してください。";
"mapper08" = "ダブルタップする前に、違う色や形の組み合わせを気軽に試してください。";
"mapper09" = "ここを\nダブル\nタップ";
"mapper10" = "３番目のノードに「ジューシーハム」とタイプして、リターンキーを押してください。";
"mapper11" = "ノードのテキストは、その部分をダブルタップして編集できます。";
"mapper12" = "ジューシーハムのノード部分をダブルタップして、「サンド」を追加し、それからリターンキーを押してください。";
"mapper13" = "ノード部分をシングルタップすると、他のノードに接続できます。";
"mapper14" = "「ジューシーハムサンド」ノード部分をシングルタップしてください。";
"mapper15" = "「ジューシー」と「ハム」両方のノードをタップします。接続を設定するには、「OK」を押します。";
"mapper16" = "既存ノードの形や色を変えたいですか？バブルやバブルの集合体を動かしたいですか？アンカー機能について読んでみましょう！（ヘルプの中にあります）";
"mapper17" = "メニューキー（左下隅の赤い点）を押してください";
"mapper18" = "アイテルキーを押してください";
"mapper19" = "クリアキーを押してください";
"mapper20" = "アイテルをクリアにするには「はい」を押してください";

"lexiconMain" = "その説明を参照するにはトークンをタップしてシングルに\n \あなたの現在の表現にそれを挿入するためのトークンをダブルタップ。";
"lexiconFilter" = "（フィルタ）";
"lexOperator" = "演算子";
"lexMisc" = "その他";
"lexPower" = "冪乗";
"lexTrig" = "三角";
"lexAdd" = "加算演算子";
"lexSub" = "減算演算子";
"lexMul" = "乗算演算子";
"lexDiv" = "除算演算子";
"lexPow" = "べき乗演算子を\n \非整数乗に連れて行かれnNegativeリアルタイム入力がNaNになります。";
"lexDot" = "ドット積の演算子";
"lexEqual" = "真、0が偽であれば等しい場合に\n \nComparison演算子は1を返します。";
"lexNotEqual" = "等しくない\nの\nComparison演算子はtrue、falseの場合0の場合は1を返します。";
"lexLess" = "\n未満\nComparison演算子はtrue、falseの場合0の場合は1を返します。";
"lexLessEqual" = "より小さいか等しい\nの\nComparison演算子がfalseの場合はtrue、0の場合は1を返します。";
"lexGreat" = "真、0が偽であれば場合、\より大きいN \nComparison演算子は1を返します。";
"lexGreatEqual" = "より大きいか等しい\nの\nComparison演算子はtrue、falseの場合0の場合は1を返します。";
"lexFac" = "階乗";
"lexRound" = "最も近い整数への丸め";
"lexFloor" = "floor関数は、それが（またはそれが既に整数である場合、値そのもの）の間にあるという2つの整数の賃貸人に価値をシフトします。";
"lexAbs" = "絶対値";
"lexMin" = "2つの値のうち小さい方を返します";
"lexMax" = "は2つの値の大きい方を返します";
"lexIf" = "IF THEN ELSE \n \nばパラメータ（第一）は、その後（非ゼロ値に評価される） '次に'パラメータをtrueである 'の場合'（2）が返されます、それ以外の場合はfalseである場合（ 'ELSE'パラメータ（3）が返されますし）がゼロに評価されます\n \nOoviumは、すべてのパラメータはその関数に送信される前に最初に評価されます。しかし、これは再帰的な関数は、常にスタックのオーバーフローが発生することになります。再帰関数のために、それは関数の型 'し'と '他'のパラメータを使用して第二のフォームを使用する必要があります。第二形態では、関数自体は結果であり、したがって、唯一の適切なバージョンは、スタックオーバーフローを防止するために評価されます。 " ;
"lexSum" = "合計\n \nこの関数は、kのインクリメント値を使用してその機能を繰り返すことにより、関数のパラメータ（3）の結果を合計します。ます\n \ニン最初の形式はkがstartパラメータ（第一）から繰り返されますストップ·パラメータ（2）を介して、kは、startパラメータ（第1回）で始まりますが、条件パラメータは（2）がtrueのまま 'を実行していきます第二の形式で。。";
"lexRandom" = "は0からn-1までのランダムな整数を返します";
"lexSqrt" = "平方根（すなわち、x ^ 0.5）に\n \nNegative実際の入力がNaNになります。";
"lexLn" = "自然対数（すなわち、対数の底e）をexp関数のInverse。";
"lexLog" = "10を底とする対数の基本10機能のInverse。";
"lexLog2" = "対数の底2つの関数のInverse。";
"lexExp" = "eの指数関数、パワー（〜2.71 ...）から（e ^ X）";
"lexTen" = "10のべき乗（10 ^ X）";
"lexTwo" = "2の累乗（2 ^ X）";
"lexSin" = "サインを\n \nこの入力角度はラジアンでなければなりません。";
"lexCos" = "コサインます\n \nこの入力角度はラジアンでなければなりません。";
"lexTan" = "タンジェントに\n \nこの入力角度はラジアンでなければなりません。";
"lexSec" = "割線に\n \nこの入力角度はラジアンでなければなりません。";
"lexCsc" = "コセカントます\n \nこの入力角度はラジアンでなければなりません。";
"lexCot" = "コタンジェントに\n \nこの入力角度はラジアンでなければなりません。";
"lexAsin" = "アークサイン";
"lexAcos" = "アークコサイン";
"lexAtan" = "アークタンジェント";
"lexSinh" = "サイン双曲線";
"lexCosh" = "双曲線余弦";
"lexTanh" = "双曲線正接";
"lexAsinh" = "双曲線アークサイン";
"lexAcosh" = "双曲線コサイン";
"lexAtanh" = "双曲線正接";
